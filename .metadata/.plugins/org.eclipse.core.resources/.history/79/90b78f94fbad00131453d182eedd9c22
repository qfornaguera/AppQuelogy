package com.example.appqueology;

import java.security.acl.Owner;

import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Path;
import android.graphics.Point;
import android.graphics.PointF;
import android.graphics.RectF;
import android.view.DragEvent;
import android.view.View;
import android.view.ViewGroup;
import android.view.View.OnDragListener;
import android.webkit.WebView;
import android.webkit.WebView.FindListener;
import android.widget.RelativeLayout;

public class OnDragArtifact implements OnDragListener{
	
	public OnDragArtifact() {
		// TODO Auto-generated constructor stub
	}
	
	@Override
	public boolean onDrag(View v, DragEvent event) {
		
		switch (event.getAction()) {
			case DragEvent.ACTION_DRAG_STARTED:
			  break;
			case DragEvent.ACTION_DRAG_ENTERED:
			  break;
			case DragEvent.ACTION_DRAG_EXITED:        
			  break;
			case DragEvent.ACTION_DROP:
				View touchedArtifact = (View) event.getLocalState();
				View owner = (View)touchedArtifact.getParent();
				if(v != owner){//if the drag and drop started at a SlideDrawer Artifact
					if(event.getX() > owner.getWidth()){//Check if it has been dropped to main frame
						Artifact square = new Artifact(v.getContext());//then create a new Artifact at the main frame where it was dropped
						square.setX(event.getX());
				        square.setY(event.getY());
				        square.setBackgroundColor(Color.BLACK);
				        RelativeLayout Rel = (RelativeLayout)v;
				        Rel.addView(square,100,100);
				        touchedArtifact.setBackgroundColor(Color.BLACK);
				        /*DiagramView diagramView = (DiagramView)v.findViewById(R.id.diag_view);
				        Diagram diagram = diagramView.getDiagram();*/
				        
					}else{//else 
						touchedArtifact.setBackgroundColor(Color.BLACK);
					}

					View slideDrawer = (View)owner.getParent();//ensure the SlideDrawer overlaps all the views
					slideDrawer.bringToFront();
					
				}else{
					RelativeLayout Rel = (RelativeLayout)v;
					touchedArtifact.setX(event.getX()-50);
					touchedArtifact.setY(event.getY()-50);
					touchedArtifact.setBackgroundColor(Color.BLACK);
					
					Canvas c = new Canvas();
					Path p = new Path();
					p.moveTo(touchedArtifact.getX(), touchedArtifact.getY());
					p.lineTo(100, 100);
					Paint paint = new Paint(Paint.ANTI_ALIAS_FLAG);
					paint.setStyle(Paint.Style.STROKE);
					paint.setStrokeWidth(2);
					paint.setColor(Color.BLACK);
					c.drawPath(p, paint);
				}
	
			  break;
			case DragEvent.ACTION_DRAG_ENDED:
			  default:
			  break;
		}
		return true;
			
	}

}
