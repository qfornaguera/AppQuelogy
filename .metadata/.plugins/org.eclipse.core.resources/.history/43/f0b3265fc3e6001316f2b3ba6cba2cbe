package com.example.appqueology;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.PointF;
import android.util.Log;
import android.view.MotionEvent;
import android.view.View;
import android.widget.RelativeLayout;

/**
 * 
 * 
 * @author Joaquim Fornaguera
 * 
 * This custom class extends view and in the board and draws a line point to point
 *
 */
public class Line extends View{
	
	Paint paint = new Paint();
	PointF p1 = new PointF();
	PointF p2 = new PointF();
	Artifact father,son;
	long startTime;
	
	public Line(Context context,PointF p1,PointF p2,Artifact father,Artifact son) {
		super(context);
		this.p1=p1;
		this.p2=p2;
		this.father = father;
		this.son = son;
		paint.setColor(Color.BLACK);
		paint.setStrokeWidth(5);
	}
	
	@Override
	public boolean dispatchTouchEvent(MotionEvent event) {
		float x,x1,x2,y,y1,y2;
		float minX,maxX,minY,maxY;
		float Xmid,Ymid;
		double dist;
		RelativeLayout Rel= (RelativeLayout)this.getParent();
		x = event.getX();
		y = event.getY();
		x1 = p1.x;
		y1 = p1.y;
		x2 = p2.x;
		y2 = p2.y;
		
		Xmid = (x1 + x2)/2;
		Ymid = (y1 + y2)/2;
		
		dist = Math.sqrt(Math.pow(Xmid-event.getX(),2)+Math.pow(Ymid-event.getY(),2));
		
		minX = Math.min(x1, x2);
		maxX = Math.max(x1, x2);
		minY = Math.min(y1, y2);
		maxY = Math.max(y1, y2);
		
		try{
			if(event.getAction() == MotionEvent.ACTION_DOWN || event.getAction() == MotionEvent.ACTION_UP || event.getAction() == MotionEvent.ACTION_MOVE){				
				if(x > minX && x < maxX && y > minY && y < maxY && dist <= 50){
					Log.v("True","True");
					if(event.getAction() == MotionEvent.ACTION_DOWN){
						startTime = System.currentTimeMillis();
						paint.setColor(Color.RED);
						this.invalidate();
					}
					
					if(event.getAction() == MotionEvent.ACTION_UP){
						if(System.currentTimeMillis()-startTime > 1000){
							this.son.removeFather(this.father);
							this.father.removeSon(this.son);
							Rel.removeView(this);
							startTime = 0;
						}else{
							startTime = 0;
							paint.setColor(Color.BLACK);
							this.invalidate();
						}
					}
					return true;
				}else{
					startTime = 0;
					paint.setColor(Color.BLACK);
					this.invalidate();
					return false;
				}
			}else{
				startTime = 0;
				paint.setColor(Color.BLACK);
				this.invalidate();
				return false;
			}
		}catch(Exception e){
			startTime = 0;
			paint.setColor(Color.BLACK);
			this.invalidate();
			return false;
		}
	}
	
	@Override
    public void onDraw(Canvas canvas) {
            canvas.drawLine(p1.x,p1.y,p2.x,p2.y,paint);
    }

}
